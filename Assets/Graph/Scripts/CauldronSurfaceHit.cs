using UnityEngine;

namespace RDSystem
{
    [RequireComponent(typeof(Collider))]
    public class CauldronSurfaceHit : MonoBehaviour
    {
        public LiquidDropUpdater updater;
        //Color Property name generated by shader graph
        string colorPropertyName = "Color_2B85FF3B";

        private void OnCollisionEnter(Collision collision)
        {
            //Set the Hit position to the collision position
            var pos = gameObject.transform.InverseTransformPoint(collision.contacts[0].point);
            updater.hitPosition = new Vector2(-pos.x + 0.5f, pos.y + 0.5f);

            //Test if it's a tube
            if (collision.gameObject.GetComponent<EmptyingTube>())
            {
                var fillRate = collision.gameObject.GetComponent<MeshRenderer>().materials[1].GetFloat("FillingRate");
                if(fillRate>-1)
                {
                    //Get the color of the liquid in the tube
                    updater.hitColor = collision.gameObject.GetComponent<MeshRenderer>().materials[1].GetColor(colorPropertyName);
                    updater.Hit();
                }
            }

            //Test if it's a flask
            if (collision.gameObject.GetComponentInChildren<EmptyingSkinned>())
            {
                var flask = collision.gameObject.GetComponentInChildren<EmptyingSkinned>().gameObject.GetComponent<SkinnedMeshRenderer>();
                if (flask.materials[2].GetFloat("FillingRate") > 0)
                {
                    //Get the color of the liquid in the tube. Property name generated by shader graph
                    updater.hitColor = flask.materials[2].GetColor(colorPropertyName);
                    updater.Hit();
                }
            }

            //Test if it's an impact sphere for liquid vfx
            if(collision.gameObject.GetComponent<ImpactObj>())
            {
                var impact = collision.gameObject.GetComponent<ImpactObj>();
                if(impact.spawnerObj != null)
                {
                    updater.hitColor = impact.spawnerObj.GetComponent<LiquidPour>().color;
                    updater.Hit();
                }
            }
        }
    }
}